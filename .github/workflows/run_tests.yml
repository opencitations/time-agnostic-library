#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2025 Arcangelo Massari <arcangelo.massari@unibo.it>
#
# Permission to use, copy, modify, and/or distribute this software for any purpose
# with or without fee is hereby granted, provided that the above copyright notice
# and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED 'AS IS' AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT,
# OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
# DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
# ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
# SOFTWARE.


name: Run tests

on:
  push:
    branches:
      - "**" # All branches, including those with /
  pull_request:
    branches: [main]

jobs:
  CheckCoverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Setup Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install dependencies
      run: |
        poetry install --with dev
        
    - name: Start Virtuoso
      run: |
        cd virtuoso-opensource/bin
        ./virtuoso-t &
        cd ../..
        python3 -c 'import time; time.sleep(10)'
        
    - name: Run tests with coverage
      run: |
        poetry run coverage run --rcfile=tests/coverage/.coveragerc
        poetry run coverage xml
        echo "=== Coverage Report ==="
        poetry run coverage report
        echo "COVERAGE=$(poetry run coverage report | grep TOTAL | awk '{print $4}')" >> $GITHUB_ENV
        
    - name: Generate HTML coverage report
      run: |
        poetry run coverage html -d htmlcov
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}-${{ github.ref_name }}
        path: htmlcov/
        retention-days: 14
        
    - name: Generate coverage badge
      if: matrix.python-version == '3.10'
      run: |
        # Extract coverage percentage as a number
        COVERAGE_NUM=$(echo ${{ env.COVERAGE }} | sed 's/%//')
        
        # Determine color based on coverage
        if (( $(echo "$COVERAGE_NUM >= 90" | bc -l) )); then
          COLOR="brightgreen"
        elif (( $(echo "$COVERAGE_NUM >= 80" | bc -l) )); then
          COLOR="green"
        elif (( $(echo "$COVERAGE_NUM >= 70" | bc -l) )); then
          COLOR="yellowgreen"
        elif (( $(echo "$COVERAGE_NUM >= 60" | bc -l) )); then
          COLOR="yellow"
        else
          COLOR="red"
        fi
        
        echo "BADGE_COLOR=$COLOR" >> $GITHUB_ENV
      
    - name: Create badge
      if: matrix.python-version == '3.10'
      uses: RubbaBoy/BYOB@v1.3.0
      with:
        name: opencitations-time-agnostic-library-coverage-${{ github.ref_name }}
        label: "Coverage"
        status: "${{ env.COVERAGE }}"
        color: ${{ env.BADGE_COLOR }}
        github_token: ${{ secrets.GIST_PAT }}
        repository: arcangelo7/badges
        actor: arcangelo7
